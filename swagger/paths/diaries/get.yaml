get:
  tags: [Diaries]
  summary: Get user's diary entries (paginated)
  security:
    - bearerAuth: []
  parameters:
    - name: page
      in: query
      required: false
      schema: { type: integer, minimum: 1, default: 1 }
      description: Page number
    - name: limit
      in: query
      required: false
      schema: { type: integer, minimum: 1, maximum: 100, default: 10 }
      description: Items per page
    - name: sortBy
      in: query
      required: false
      schema:
        type: string
        enum: [createdAt, updatedAt]
        default: createdAt
    - name: order
      in: query
      required: false
      schema:
        type: string
        enum: [asc, desc]
        default: desc
  responses:
    '200':
      description: Paginated diary entries
      content:
        application/json:
          schema:
            type: object
            properties:
              status: { type: integer, example: 200 }
              message: { type: string, example: Successfully fetched diaries }
              data:
                type: object
                properties:
                  page: { type: integer, example: 1 }
                  limit: { type: integer, example: 10 }
                  total: { type: integer, example: 42 }
                  totalPages: { type: integer, example: 5 }
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Diary'
    '401':
      $ref: '../../components/responses/401.yaml'
    '500':
      $ref: '../../components/responses/500.yaml'
